//namespace 변수

//// 변수 : 변할 수있는 값
//// 데이터를 저장하기 위해 프로그램에 의해 이름을 할당받은 메모리 공간
//// 데이터를 저장할 수 있는 메모리 공간을 의미하며, 저장된 값은 변경 가능
//{
//    internal class Program
//    {
//        static void Main(string[] args)
//        #region
//        // <변수 선언 및 초기화>
//        // 자료형의 선언하고 빈칸 뒤에 변수이름을 작성하여 변수 선언
//        // 선언한 변수에 값을 처음 할당하는 과정을 초기화라고 선언
//        // 변수 선언과 초기화 과정을 동시에 진행할 수 있음

//        {
//            // 정수 (integer) : 0, 1, 2, -10, -30, 80

//            int attack; // 공격력                       
//            int defense; // 방어력

//            attack = 100;
//            defense = 200;

//            Console.WriteLine("공격력 {0}으로 공격합니다.", attack);
//            Console.WriteLine("방러력 {0}으로 방어합니다.", defense);

//            // int 자료형의 이름이 intValue인 변수에 10의 데이터를 초기화
//            // float 자료형의 이름이 floatValue인 변수를 선언하지만 값을 초기화하지 않음


//            // <변수명의 규칙> *꼭 지켜라*
//            // 1. 변수명은 유의미한 단어를 쓰자(a : x ateeack : o)
//            // 2. 띄어쓰기 불가능 (카멜표기법 : 띄어쓰기 대신 단어의 시작마다 대문자로 표현을 해줌)
//            // attackdefense : x attackDefense : o
//            // 3. 특수문자 불가능
//            // 4. 숫자부터 시작 불가능


//            // 상수 :  변하지 않는 수
//            // const
//            #endregion
//            const string gameName = "레전드 RPG";


//            // gameName = "다른 게임 이름";



//            Console.WriteLine("{0} 시작!", gameName);


//            /* 자료형 (Data Type)
            
//             자료(데이터)의 형태를 지정
//             데이터가 메모리에 저장되는 형태와 처리되는 방식을 명시하는 역활
//             0과 1만으로 구성된 컴퓨터에게 여러 형태의 자료를 저장하기 위함

//             // <자료형의 종류>
//             // 자료형의 이름        자료형의 형태     메모리 크기    표현 볌위
            
//             // - 논리형 -
//             // bool                 논리 자료형       1byte          true,false
            
//            // - 정수형 - 0,1,2,3,-10,-20 등
//            // byte                 부호 없는 정수    1byte          0 ~ 255
//            // sbyte		        부호 있는 정수	  1byte         -128 ~ 127
//            //
//            // short		        부호 있는 정수    2byte         -32,768 ~ 32,767
//            // **int**(무난)        부호 있는 정수    4byte         -2,147,483,648 ~ 2,147,483,647
//            // long(특수상황에서만) 부호 있는 정수    8byte         -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
//            //
//            // ushort		        부호 없는 정수	  2byte         0 ~ 65,535
//            // uint	                부호 없는 정수	  4byte         0 ~ 4,294,967,295
//            // ulong	 	        부호 없는 정수    8byte         0 ~ 18,446,744,073,709,551,615
//            // 
//            // - 실수형 - 
//            // float                부동소수점 실수   4byte         3.4e-38 ~ 3.4e+38 / 약 소수점 7자리
//            // double               부동소수점 실수   8byte         1.7e-308 ~ 1.7e+308 / 약 소수점 15자리
//            //
//            // - 문자형 -
//            // char                 유니코드 문자형   2byte         'a', 'b', '한' // 한글자 만 쓸때
//            // string               유니코드 문자열     x           "qwerasdzxc", "안녕" //여러 글자들 쓸때
		
//            */

//        }
//    }
//}